/******************************************************************************* * Copyright (c) 2005 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at * http://www.eclipse.org/legal/epl-v10.html * * Contributors: *     IBM Corporation - initial API and implementation ******************************************************************************/package org.eclipse.jface.menus;import org.eclipse.jface.util.Util;/** * <p> * <strong>EXPERIMENTAL</strong>. This class or interface has been added as * part of a work in progress. There is a guarantee neither that this API will * work nor that it will remain the same. Please do not use this API without * consulting with the Platform/UI team. * </p> *  * @since 3.2 */public final class SGroup extends MenuElement {	private IDynamicMenu dynamic;	private SLocation[] locations;	public boolean separatorsVisible = true;	public SGroup(final String id) {		super(id);	}	public final void define(final boolean separatorsVisible,			final SLocation[] locations, final IDynamicMenu dynamic) {		this.separatorsVisible = separatorsVisible;		this.locations = locations;		this.dynamic = dynamic;		this.defined = true;	}	public final boolean equals(final Object object) {		// Check if they're the same.		if (object == this) {			return true;		}		// Check if they're the same type.		if (!(object instanceof SGroup))			return false;		// Check each property in turn.		final SGroup group = (SGroup) object;		return Util.equals(id, group.id);	}	public final IDynamicMenu getDynamic() {		return dynamic;	}	public final SLocation[] getLocations() {		final SLocation[] result = new SLocation[locations.length];		System.arraycopy(locations, 0, result, 0, locations.length);		return result;	}	public final boolean isSeparatorsVisible() {		return separatorsVisible;	}	public final String toString() {		if (string == null) {			final StringBuffer stringBuffer = new StringBuffer();			stringBuffer.append("SGroup("); //$NON-NLS-1$			stringBuffer.append(id);			stringBuffer.append(',');			stringBuffer.append(separatorsVisible);			stringBuffer.append(',');			stringBuffer.append(locations);			stringBuffer.append(',');			stringBuffer.append(dynamic);			stringBuffer.append(',');			stringBuffer.append(defined);			stringBuffer.append(')');			string = stringBuffer.toString();		}		return string;	}	public final void undefine() {		string = null;		defined = false;		separatorsVisible = true;		locations = null;		dynamic = null;	}}