/******************************************************************************* * Copyright (c) 2005 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at * http://www.eclipse.org/legal/epl-v10.html * * Contributors: *     IBM Corporation - initial API and implementation ******************************************************************************/package org.eclipse.jface.menus;/** * <p> * A location element referring to a specific path within within the menu bar, * tool bar or status line. * </p> * <p> * Clients may instantiate this class, but must not extend. * </p> * <p> * <strong>EXPERIMENTAL</strong>. This class or interface has been added as * part of a work in progress. There is a guarantee neither that this API will * work nor that it will remain the same. Please do not use this API without * consulting with the Platform/UI team. * </p> *  * @since 3.2 */public final class SBar extends LeafLocationElement {	/**	 * The constant used for a menu bar.	 */	public static final String TYPE_MENU = "menu"; //$NON-NLS-1$	/**	 * The constant used for the tool bar.	 */	public static final String TYPE_TOOL = "tool"; //$NON-NLS-1$	/**	 * The constant used for the status line.	 */	public static final String TYPE_STATUS = "status"; //$NON-NLS-1$	/**	 * The type of bar this is making reference to.	 */	private final String type;	/**	 * Constructs a new instance of <code>SBar</code>.	 * 	 * @param type	 *            The type of bar this is making reference to.	 * @param path	 *            The path to the final location. If this value is	 *            <code>null</code>, it means that it should be inserted at	 *            the top-level of the bar.	 * @see #TYPE_MENU	 * @see #TYPE_STATUS	 * @see #TYPE_TOOL	 */	public SBar(final String type, final String path) {		super(path);		this.type = type;	}	/**	 * Returns the type for this bar.	 * 	 * @return The type for this bar.	 */	public final String getType() {		return type;	}	public final String toString() {		final StringBuffer buffer = new StringBuffer();		buffer.append("SBar("); //$NON-NLS-1$		buffer.append(type);		buffer.append(',');		buffer.append(getPath());		buffer.append(')');		return buffer.toString();	}}